// <auto-generated />
using System;
using MiBibliotecaDigital.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiBibliotecaDigital.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250308031208_MiBibliotecaDigital")]
    partial class MiBibliotecaDigital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiBibliotecaDigital.Models.Autores", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorId"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutorId");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            AutorId = 1,
                            Apellidos = "Asimov",
                            Biografia = "Autor de ciencia ficción y divulgación científica.",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5856),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5857),
                            FechaNacimiento = new DateTime(1920, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nacionalidad = "Rusa",
                            Nombre = "Isaac"
                        },
                        new
                        {
                            AutorId = 2,
                            Apellidos = "Harari",
                            Biografia = "Historiador y escritor de Sapiens.",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5860),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5861),
                            FechaNacimiento = new DateTime(1976, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nacionalidad = "Israelí",
                            Nombre = "Yuval"
                        });
                });

            modelBuilder.Entity("MiBibliotecaDigital.Models.AutoresLibros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.Property<string>("TipoContribucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AutoresLibros");
                });

            modelBuilder.Entity("MiBibliotecaDigital.Models.Categorias", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Descripcion = "Libros de ciencia ficción y fantasía",
                            Estado = "Activa",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5830),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5830),
                            Nombre = "Ciencia Ficción"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Descripcion = "Libros de historia mundial",
                            Estado = "Activa",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5833),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5833),
                            Nombre = "Historia"
                        });
                });

            modelBuilder.Entity("MiBibliotecaDigital.Models.Libros", b =>
                {
                    b.Property<int>("LibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibroId"));

                    b.Property<int>("AñoPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Disponibilidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenPortada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LibroId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            LibroId = 1,
                            AñoPublicacion = 1951,
                            CategoriaId = 1,
                            Disponibilidad = "Disponible",
                            Editorial = "Gnome Press",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5879),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5879),
                            Formato = "PDF",
                            ImagenPortada = "fundacion.jpg",
                            Sinopsis = "Una de las sagas más famosas de ciencia ficción.",
                            Titulo = "Fundación"
                        },
                        new
                        {
                            LibroId = 2,
                            AñoPublicacion = 2011,
                            CategoriaId = 2,
                            Disponibilidad = "Disponible",
                            Editorial = "Debate",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5883),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5883),
                            Formato = "EPUB",
                            ImagenPortada = "sapiens.jpg",
                            Sinopsis = "Historia de la humanidad contada de forma fascinante.",
                            Titulo = "Sapiens"
                        });
                });

            modelBuilder.Entity("MiBibliotecaDigital.Models.Prestamos", b =>
                {
                    b.Property<int>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrestamoId"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDevolucionProgramada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDevolucionReal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PrestamoId");

                    b.ToTable("Prestamos");

                    b.HasData(
                        new
                        {
                            PrestamoId = 1,
                            Comentarios = "Buena condición",
                            Estado = "Activo",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5907),
                            FechaDevolucionProgramada = new DateTime(2025, 3, 22, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5899),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5907),
                            FechaPrestamo = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5899),
                            LibroId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            PrestamoId = 2,
                            Comentarios = "Nuevo",
                            Estado = "Activo",
                            FechaCreacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5912),
                            FechaDevolucionProgramada = new DateTime(2025, 3, 22, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5910),
                            FechaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5912),
                            FechaPrestamo = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5910),
                            LibroId = 2,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("MiBibliotecaDigital.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<int>("CantonId")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            CantonId = 1,
                            Contraseña = "123456",
                            CorreoElectronico = "juanperez@email.com",
                            Estado = "Activo",
                            FechaRegistro = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5614),
                            FechaUltimaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5614),
                            NombreCompleto = "Juan Pérez",
                            ProvinciaId = 1,
                            Telefono = "8888-8888"
                        },
                        new
                        {
                            UsuarioId = 2,
                            CantonId = 3,
                            Contraseña = "abcdef",
                            CorreoElectronico = "mariagonzalez@email.com",
                            Estado = "Activo",
                            FechaRegistro = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5617),
                            FechaUltimaModificacion = new DateTime(2025, 3, 7, 21, 12, 8, 41, DateTimeKind.Local).AddTicks(5618),
                            NombreCompleto = "María González",
                            ProvinciaId = 2,
                            Telefono = "7777-7777"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
